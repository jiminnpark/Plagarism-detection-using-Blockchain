from web3 import Web3 
import json
from chunk_hash import give_chunk_hash
import time


def check_validation(filename,sender):

	##############################
    ganache_url="http://127.0.0.1:7545"
    address='0x433E09bd49FF74a22723a9ebdF8c4b3392a1a4FF'
    bytecode='608060405234801561001057600080fd5b50610af6806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806307c07931146100515780631f6938da146100815780633e630bfe146100b1578063b1549722146100cf575b600080fd5b61006b60048036038101906100669190610699565b6100ff565b6040516100789190610704565b60405180910390f35b61009b6004803603810190610096919061071f565b610247565b6040516100a89190610704565b60405180910390f35b6100b9610275565b6040516100c69190610704565b60405180910390f35b6100e960048036038101906100e49190610768565b61027b565b6040516100f691906107cc565b60405180910390f35b6000806000905060008367ffffffffffffffff8111156101225761012161044d565b5b6040519080825280602002602001820160405280156101505781602001602082028036833780820191505090505b5090506000805b858110156101ec57600180888381518110610175576101746107e7565b5b602002602001015160405161018a9190610887565b908152602001604051809103902054036101d95783806101a9906108cd565b945050808383806101b9906108cd565b9450815181106101cc576101cb6107e7565b5b6020026020010181815250505b80806101e4906108cd565b915050610157565b507ff38e56d54db54b775b820be5e193700994b8cacd364059b9026fca7147808c8a8260405161021c91906109d3565b60405180910390a18460648461023291906109f5565b61023c9190610a66565b935050505092915050565b6001818051602081018201805184825260208301602085012081835280955050505050506000915090505481565b60005481565b600080829050600083519050600061029385836100ff565b9050601481101561039e5760008351905060005b8181101561033f57600060018683815181106102c6576102c56107e7565b5b60200260200101516040516102db9190610887565b9081526020016040518091039020540361032c57610314878281518110610305576103046107e7565b5b602002602001015160016103fc565b600080815480929190610326906108cd565b91905055505b8080610337906108cd565b9150506102a7565b503373ffffffffffffffffffffffffffffffffffffffff167fd8b3757af081879c85b11fc0676c4d10be4c1434bdbdc4aa0a587b94737aa073600184604051610389929190610a97565b60405180910390a260019450505050506103f7565b3373ffffffffffffffffffffffffffffffffffffffff167fd8b3757af081879c85b11fc0676c4d10be4c1434bdbdc4aa0a587b94737aa0736000836040516103e7929190610a97565b60405180910390a2600093505050505b919050565b8060018360405161040d9190610887565b9081526020016040518091039020819055505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6104858261043c565b810181811067ffffffffffffffff821117156104a4576104a361044d565b5b80604052505050565b60006104b7610423565b90506104c3828261047c565b919050565b600067ffffffffffffffff8211156104e3576104e261044d565b5b602082029050602081019050919050565b600080fd5b600080fd5b600067ffffffffffffffff8211156105195761051861044d565b5b6105228261043c565b9050602081019050919050565b82818337600083830152505050565b600061055161054c846104fe565b6104ad565b90508281526020810184848401111561056d5761056c6104f9565b5b61057884828561052f565b509392505050565b600082601f83011261059557610594610437565b5b81356105a584826020860161053e565b91505092915050565b60006105c16105bc846104c8565b6104ad565b905080838252602082019050602084028301858111156105e4576105e36104f4565b5b835b8181101561062b57803567ffffffffffffffff81111561060957610608610437565b5b8086016106168982610580565b855260208501945050506020810190506105e6565b5050509392505050565b600082601f83011261064a57610649610437565b5b813561065a8482602086016105ae565b91505092915050565b6000819050919050565b61067681610663565b811461068157600080fd5b50565b6000813590506106938161066d565b92915050565b600080604083850312156106b0576106af61042d565b5b600083013567ffffffffffffffff8111156106ce576106cd610432565b5b6106da85828601610635565b92505060206106eb85828601610684565b9150509250929050565b6106fe81610663565b82525050565b600060208201905061071960008301846106f5565b92915050565b6000602082840312156107355761073461042d565b5b600082013567ffffffffffffffff81111561075357610752610432565b5b61075f84828501610580565b91505092915050565b60006020828403121561077e5761077d61042d565b5b600082013567ffffffffffffffff81111561079c5761079b610432565b5b6107a884828501610635565b91505092915050565b60008115159050919050565b6107c6816107b1565b82525050565b60006020820190506107e160008301846107bd565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600081519050919050565b600081905092915050565b60005b8381101561084a57808201518184015260208101905061082f565b60008484015250505050565b600061086182610816565b61086b8185610821565b935061087b81856020860161082c565b80840191505092915050565b60006108938284610856565b915081905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006108d882610663565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361090a5761090961089e565b5b600182019050919050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61094a81610663565b82525050565b600061095c8383610941565b60208301905092915050565b6000602082019050919050565b600061098082610915565b61098a8185610920565b935061099583610931565b8060005b838110156109c65781516109ad8882610950565b97506109b883610968565b925050600181019050610999565b5085935050505092915050565b600060208201905081810360008301526109ed8184610975565b905092915050565b6000610a0082610663565b9150610a0b83610663565b9250828202610a1981610663565b91508282048414831517610a3057610a2f61089e565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610a7182610663565b9150610a7c83610663565b925082610a8c57610a8b610a37565b5b828204905092915050565b6000604082019050610aac60008301856107bd565b610ab960208301846106f5565b939250505056fea26469706673582212201d8a3a165d3c63d2a787d2776afe3039de0fd2eeec4729579cffad868f88ddff64736f6c63430008120033'
    abidata='[{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256[]","name":"plag_part","type":"uint256[]"}],"name":"plag_detect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"bool","name":"isValid","type":"bool"},{"indexed":false,"internalType":"uint256","name":"percentPlag","type":"uint256"}],"name":"validation","type":"event"},{"inputs":[{"internalType":"string","name":"","type":"string"}],"name":"chunks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"_contentHash","type":"string[]"},{"internalType":"uint256","name":"n","type":"uint256"}],"name":"plagarism","outputs":[{"internalType":"uint256","name":"percent","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"totalChunks","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"string[]","name":"_contentHash","type":"string[]"}],"name":"validate","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}]'
    abi=json.loads(abidata)
    web3=Web3(Web3.HTTPProvider(ganache_url))
    contract=web3.eth.contract(address=address,abi=abi,bytecode=bytecode)
    ##############################


    # sender='0x00bc367F685a3332f6959FE2FdF5d5634867D3BB'

    print(web3.is_connected())

    hashes=give_chunk_hash(filename)  # logic
    # hashes=['a','b','c']

    bl1=web3.eth.get_balance(sender)
    bl1=(web3.from_wei(bl1,'ether'))

    tx=(contract.functions.validate(hashes).transact({'from':sender}))
    receipt = web3.eth.get_transaction_receipt(tx)
    logs = contract.events.validation().process_receipt(receipt)
    
    isvalid=(logs[0]['args']['isValid'])
    plag_percent=(logs[0]['args']['percentPlag'])
    logs=contract.events.plag_detect().process_receipt(receipt)
    plag_temp=(logs[0])['args']['plag_part']

    bl2=web3.eth.get_balance(sender)
    bl2=(web3.from_wei(bl2,'ether'))
    
    plag_list=[]
    for x in plag_temp:
        if x==0:
            continue
        plag_list.append(x-1)

    if isvalid==True:
        	return [bl2,isvalid,plag_percent,plag_list]
    else:
    	return [bl2,plag_percent,plag_list]

# print(check_validation("research_new.txt","0x239da801e22d28C0b14CF69A12f923C11402515A"))